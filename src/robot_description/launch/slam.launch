<launch>
  <!-- Arguments -->
  <!-- <arg name="model" default="burger" doc="model type [burger, waffle, waffle_pi]"/> -->
  <arg name="slam_methods" default="hector" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
  <arg name="configuration_basename" default="lds_2d.lua"/>
  <arg name="open_rviz" default="true"/>

  <!-- TurtleBot3 -->
  <!-- <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include> -->

  <!-- tentativa 1
  <param name="robot_description" command="$(find xacro)/xacro 
    '$(find robot_description)/urdf/robot.urdf.xacro'"/> -->

  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find robot_description)/urdf/robot.urdf.xacro'" />

  <!-- send fake joint values -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="TRUE"/>
  </node>

  <!-- Combine joint values -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>


  <!-- SLAM: Gmapping, Cartographer, Hector, Karto, Frontier_exploration, RTAB-Map -->
  <include file="$(find robot_description)/launch/$(arg slam_methods).launch">
    <arg name="configuration_basename" value="$(arg configuration_basename)"/>
  </include>

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find robot_description)/rviz/$(arg slam_methods).rviz"/>
  </group>
</launch>
